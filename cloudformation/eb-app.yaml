AWSTemplateFormatVersion: '2010-09-09'
Description: 'Simple CloudFormation template for Node.js backend deployment on Elastic Beanstalk'

Parameters:
  ApplicationName:
    Type: String
    Default: 'contact-us-backend'
    Description: 'Name of the Elastic Beanstalk application'
  
  EnvironmentName:
    Type: String
    Default: 'contact-us-backend-dev'
    Description: 'Name of the Elastic Beanstalk environment'
  
  SolutionStackName:
    Type: String
    Default: '64bit Amazon Linux 2023 v6.1.7 running Node.js 20'
    Description: 'Platform version for Elastic Beanstalk'

Resources:
  # Elastic Beanstalk Application
  ElasticBeanstalkApplication:
    Type: AWS::ElasticBeanstalk::Application
    Properties:
      ApplicationName: !Ref ApplicationName
      Description: 'Contact Us Backend Application'

  # Elastic Beanstalk Environment
  ElasticBeanstalkEnvironment:
    Type: AWS::ElasticBeanstalk::Environment
    Properties:
      ApplicationName: !Ref ElasticBeanstalkApplication
      EnvironmentName: !Ref EnvironmentName
      SolutionStackName: !Ref SolutionStackName
      OptionSettings:
        - Namespace: aws:autoscaling:launchconfiguration
          OptionName: InstanceType
          Value: t3.micro
        - Namespace: aws:autoscaling:asg
          OptionName: MinSize
          Value: '1'
        - Namespace: aws:autoscaling:asg
          OptionName: MaxSize
          Value: '1'
        - Namespace: aws:elasticbeanstalk:environment
          OptionName: EnvironmentType
          Value: SingleInstance
        - Namespace: aws:elasticbeanstalk:environment:process:default
          OptionName: HealthCheckPath
          Value: '/api/admin/health'
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: NODE_ENV
          Value: 'production'
        - Namespace: aws:elasticbeanstalk:application:environment
          OptionName: PORT
          Value: '8080'

  # IAM Role for EC2 instances
  EC2InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkMulticontainerDocker
        - arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier

  # Instance Profile
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EC2InstanceRole

Outputs:
  ApplicationURL:
    Description: 'URL of the Elastic Beanstalk application'
    Value: !Sub 'http://${ElasticBeanstalkEnvironment}.${AWS::Region}.elasticbeanstalk.com'
    Export:
      Name: !Sub '${AWS::StackName}-ApplicationURL'
  
  EnvironmentName:
    Description: 'Name of the Elastic Beanstalk environment'
    Value: !Ref ElasticBeanstalkEnvironment
    Export:
      Name: !Sub '${AWS::StackName}-EnvironmentName'
